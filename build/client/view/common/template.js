// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['view/common/base', 'handlebars', 'view/common/helpers'], function(BaseView, Handlebars, helpers) {
    var TemplateView;
    return TemplateView = (function(_super) {

      __extends(TemplateView, _super);

      TemplateView.prototype.template = "";

      function TemplateView(options) {
        var _ref;
        if (options == null) {
          options = {};
        }
        TemplateView.__super__.constructor.call(this, options);
        this.template = (_ref = options.template) != null ? _ref : this.template;
        this.subviews = {};
      }

      TemplateView.prototype.templateData = function() {
        if (this.model != null) {
          return this.model.toJSON();
        } else if (this.collection != null) {
          return {
            items: this.collection.toJSON()
          };
        }
      };

      TemplateView.prototype.toHTML = function() {
        var _ref;
        if ((_ref = this.compiledTemplate) == null) {
          this.compiledTemplate = Handlebars.compile(this.template);
        }
        return this.compiledTemplate(this.templateData());
      };

      TemplateView.prototype.renderSubviews = function() {};

      TemplateView.prototype.render = function() {
        this.$el.html(this.toHTML());
        this.renderSubviews();
        return this;
      };

      return TemplateView;

    })(BaseView);
  });

}).call(this);
