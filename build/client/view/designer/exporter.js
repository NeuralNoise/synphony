// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['view/common/template', 'interactor/tangerine_exporter', 'text!templates/designer/exporter.handlebars'], function(TemplateView, TangerineExporter, hbsTemplate) {
    var ExporterView;
    return ExporterView = (function(_super) {

      __extends(ExporterView, _super);

      ExporterView.prototype.id = 'export-page';

      ExporterView.prototype.template = hbsTemplate;

      function ExporterView(options) {
        ExporterView.__super__.constructor.call(this, options);
        this.blob = null;
      }

      ExporterView.prototype.templateData = function() {
        var blobUrl,
          _this = this;
        if (this.blob != null) {
          console.log("Trying to make url");
          blobUrl = (window.URL || window.webkitURL).createObjectURL(this.blob);
          console.log("New blob URL: " + blobUrl);
          return {
            url: blobUrl
          };
        } else {
          console.log("Got here");
          _.defer(function() {
            return _this.interactor.run(function(err, data) {
              if (err != null) {
                return alert(err.toString());
              } else {
                _this.makeBlob(data);
                return _this.render();
              }
            });
          });
          return {
            url: "#"
          };
        }
      };

      ExporterView.prototype.makeBlob = function(data) {
        var json;
        json = JSON.stringify(data, null, 2);
        console.log("Making blob out of: " + json);
        return this.blob = new Blob([json], {
          type: "application/json"
        });
      };

      return ExporterView;

    })(TemplateView);
  });

}).call(this);
