// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['interactor/base', 'interactor/known_focus_search'], function(BaseInteractor, KnownFocusSearch) {
    var WordSearcher;
    return WordSearcher = (function(_super) {

      __extends(WordSearcher, _super);

      function WordSearcher(options) {
        this.projectManager = options.projectManager;
        this.words = this.projectManager.words();
        this.knownGPCs = this.projectManager.knownGPCs();
        this.search = new KnownFocusSearch(this.words);
        this.delegateEvent(this.knownGPCs, 'update');
      }

      WordSearcher.prototype.filterWords = function() {
        var focusGPCs, knownGPCs;
        knownGPCs = this.knownGPCs.models;
        focusGPCs = this.knownGPCs.isEmpty() ? [] : [this.knownGPCs.last()];
        return this.search.getKnownFocusItems(knownGPCs, focusGPCs);
      };

      WordSearcher.prototype.isGpcKnown = function(gpc) {
        return this.knownGPCs.isKnown(gpc);
      };

      WordSearcher.prototype.gpcHasFocus = function(gpc) {
        return this.knownGPCs.hasFocus(gpc);
      };

      WordSearcher.prototype.run = function(callback) {
        return callback(null, this.filterWords());
      };

      WordSearcher.prototype.destroy = function() {
        this.search.destroy();
        return WordSearcher.__super__.destroy.call(this);
      };

      return WordSearcher;

    })(BaseInteractor);
  });

}).call(this);
