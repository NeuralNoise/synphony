// Generated by CoffeeScript 1.3.3
(function() {
  var __slice = [].slice;

  define(['backbone', 'underscore'], function(Backbone, _) {
    var BaseInteractor;
    return BaseInteractor = (function() {

      function BaseInteractor() {}

      _.extend(BaseInteractor.prototype, Backbone.Events);

      BaseInteractor.prototype.run = function(callback) {
        return callback(null, null);
      };

      BaseInteractor.prototype.delegateEvent = function(eventProducer, eventName, newEventName) {
        var handler, _ref;
        if (newEventName == null) {
          newEventName = eventName;
        }
        handler = function() {
          var args;
          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
          return this.trigger.apply(this, [newEventName].concat(__slice.call(args)));
        };
        if ((_ref = this._delegatedEvents) == null) {
          this._delegatedEvents = [];
        }
        this._delegatedEvents.push({
          producer: eventProducer,
          name: eventName,
          handler: handler
        });
        return eventProducer.on(eventName, handler, this);
      };

      BaseInteractor.prototype.destroy = function() {
        var event, _i, _len, _ref;
        if (this._delegatedEvents != null) {
          _ref = this._delegatedEvents;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            event = _ref[_i];
            event.producer.off(event.name, event.handler, this);
          }
        }
        this._delegatedEvents = [];
        return this.off();
      };

      return BaseInteractor;

    })();
  });

}).call(this);
