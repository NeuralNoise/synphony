// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['interactor/base', 'model/store'], function(BaseInteractor, Store) {
    var ProjectManager;
    return ProjectManager = (function(_super) {

      __extends(ProjectManager, _super);

      function ProjectManager() {
        this.store = new Store;
        this.project = this.store.project;
      }

      ProjectManager.prototype.getStore = function() {
        return this.store;
      };

      ProjectManager.prototype.phonemes = function() {
        return this.store.phonemes();
      };

      ProjectManager.prototype.graphemes = function() {
        return this.store.graphemes();
      };

      ProjectManager.prototype.gpcs = function() {
        return this.store.gpcs();
      };

      ProjectManager.prototype.words = function() {
        return this.store.words();
      };

      ProjectManager.prototype.sentences = function() {
        return this.store.sentences();
      };

      ProjectManager.prototype.sequences = function() {
        return this.store.sequences();
      };

      ProjectManager.prototype.knownGPCs = function() {
        return this.store.knownGPCs();
      };

      ProjectManager.prototype.setProject = function(name) {
        this.store.setProject(name);
        return this.project = this.store.project;
      };

      ProjectManager.prototype.load = function(done) {
        return this.store.fetch({
          success: done
        });
      };

      return ProjectManager;

    })(BaseInteractor);
  });

}).call(this);
