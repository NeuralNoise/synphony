// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'view/common/menu', 'view/common/sidebar', 'view/demo/words', 'view/demo/sentences', 'view/gpc/button', 'view/common/collection', 'interactor/word_searcher'], function(Backbone, MenuView, SidebarView, WordsView, SentencesView, GPCButtonView, CollectionView, WordSearcher) {
    var DemoRouter;
    return DemoRouter = (function(_super) {
      var prefix;

      __extends(DemoRouter, _super);

      prefix = "demo";

      DemoRouter.prototype.routes = {
        "demo/:project": "home",
        "demo/:project/words": "words",
        "demo/:project/sentences": "sentences"
      };

      DemoRouter.prototype.menu = function() {
        return {
          "Words": "#" + prefix + "/" + this.project + "/words",
          "Sentences": "#" + prefix + "/" + this.project + "/sentences"
        };
      };

      DemoRouter.prototype.sidebar = function() {
        return {
          'Spelling Patterns': this.makeSpellingPatterns()
        };
      };

      function DemoRouter(options) {
        DemoRouter.__super__.constructor.call(this, options);
        this.projectManager = options.projectManager;
        this.layout = options.layout;
        this.project = "";
      }

      DemoRouter.prototype.home = function(project) {
        return this.redirect(project, "words");
      };

      DemoRouter.prototype.words = function(project) {
        var _this = this;
        return this.showContent(project, "words", function() {
          return new WordsView({
            interactor: new WordSearcher({
              projectManager: _this.projectManager
            })
          });
        });
      };

      DemoRouter.prototype.sentences = function(project) {
        var _this = this;
        return this.showContent(project, "sentences", function() {
          return new SentencesView({
            projectManager: _this.projectManager
          });
        });
      };

      DemoRouter.prototype.redirect = function(project, page) {
        return this.navigate("" + prefix + "/" + project + "/" + page, {
          trigger: true,
          replace: true
        });
      };

      DemoRouter.prototype.loadProject = function(project, done) {
        if (this.project !== project) {
          this.project = project;
          this.projectManager.setProject(project);
          return this.projectManager.load(done);
        } else {
          return done();
        }
      };

      DemoRouter.prototype.makeSpellingPatterns = function() {
        return new CollectionView({
          id: 'spelling-patterns',
          collection: this.projectManager.sequences().first().elements(),
          knownGPCs: this.projectManager.knownGPCs(),
          modelView: GPCButtonView
        });
      };

      DemoRouter.prototype.setupDefaultViews = function() {
        var _this = this;
        this.layout.menu.render("" + prefix + "/menu/" + this.project, function() {
          return new MenuView({
            model: {
              menu: _this.menu()
            }
          });
        });
        return this.layout.sidebar.render("" + prefix + "/sidebar/" + this.project, function() {
          return new SidebarView({
            model: {
              sections: _this.sidebar()
            }
          });
        });
      };

      DemoRouter.prototype.showContent = function(project, name, viewBuilder) {
        var contentName,
          _this = this;
        contentName = "" + prefix + "/" + this.project + "/" + name;
        console.log("Showing " + contentName);
        return this.loadProject(project, function() {
          _this.setupDefaultViews();
          return _this.layout.content.render(contentName, viewBuilder);
        });
      };

      return DemoRouter;

    })(Backbone.Router);
  });

}).call(this);
